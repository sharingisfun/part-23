{"title":"Learning Object-Oriented Programming - Gaston C. Hillar","uid":12179474,"size":2902246,"categoryP":"other","categoryS":"e_books","magnet":"?xt=urn:btih:aa4fc2f85f2d16a49507d205f9f7de3604b347e5&amp;dn=Learning+Object-Oriented+Programming+-+Gaston+C.+Hillar&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969","seeders":1,"leechers":0,"uploader":"Mohammad_AT","files":3,"time":1438396869,"description":"Key Features\n\nÃ¢â‚¬Â¢ Write reusable code that defines and makes objects interact with one another\n\nÃ¢â‚¬Â¢ Discover the differences in inheritance and polymorphism in Python, JavaScript, and C#\n\nÃ¢â‚¬Â¢ Capture objects from real-world elements and create object-oriented code that represents them\n\nBook Description\n\nLearning Object-Oriented Programming is an easy-to-follow guide full of hands-on examples of solutions to common problems with object-oriented code in Python, JavaScript, and C#. It starts by helping you to recognize objects from real-life scenarios and demonstrates that working with them makes it simpler to write code that is easy to understand and reuse. You will learn to protect and hide data with the data encapsulation features of Python, JavaScript, and C#.\n\nYou will explore how to maximize code reuse by writing code capable of working with objects of different types, and discover the advantage of duck typing in both Python and JavaScript, while you work with interfaces and generics in C#. With a fair understanding of interfaces, multiple inheritance, and composition, you will move on to refactor existing code and to organize your source for easy maintenance and extension.\n\nLearning Object-Oriented Programming will help you to make better, stronger, and reusable code.\n\nWhat you will learn\n\nÃ¢â‚¬Â¢ Generate instances in three programming languages: Python, JavaScript, and C#\n\nÃ¢â‚¬Â¢ Customize constructors and destructors\n\nÃ¢â‚¬Â¢ Work with a combination of access modifiers, prefixes, properties, fields, attributes, and local variables to encapsulate and hide data\n\nÃ¢â‚¬Â¢ Take advantage of specialization and the possibility to overload or override members\n\nÃ¢â‚¬Â¢ Create reusable and easier to maintain code\n\nÃ¢â‚¬Â¢ Use interfaces, generics, and multiple inheritance when available","torrent":{"xt":"urn:btih:aa4fc2f85f2d16a49507d205f9f7de3604b347e5","amp;dn":"Learning+Object-Oriented+Programming+-+Gaston+C.+Hillar","amp;tr":["udp%3A%2F%2Ftracker.openbittorrent.com%3A80","udp%3A%2F%2Fopen.demonii.com%3A1337","udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969","udp%3A%2F%2Fexodus.desync.com%3A6969"],"infoHash":"aa4fc2f85f2d16a49507d205f9f7de3604b347e5","infoHashBuffer":{"type":"Buffer","data":[170,79,194,248,95,45,22,164,149,7,210,5,249,247,222,54,4,179,71,229]},"announce":[],"urlList":[]}}